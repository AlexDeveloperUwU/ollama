name: release

on:
  workflow_dispatch:

jobs:
  # Linux x86 assets built using the container based build
  build-linux-amd64:
    environment: release
    runs-on: ubuntu-latest
    env:
      OLLAMA_SKIP_MANIFEST_CREATE: '1'
      BUILD_ARCH: amd64
      PUSH: '1'
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set Version
        shell: bash
        run: echo "VERSION=0.2.6" >> $GITHUB_ENV
      - run: |
          ./scripts/build_linux.sh
      - uses: actions/upload-artifact@v4
        with:
          name: dist-linux-amd64
          path: |
            dist/*linux*
            !dist/*-cov

  # Aggregate all the assets and ship a release
  release:
    needs:
      - build-linux-amd64
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
    env:
      OLLAMA_SKIP_IMAGE_BUILD: '1'
      PUSH: '1'
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Set Version
        shell: bash
        run: |
          echo "VERSION=0.2.6" >> $GITHUB_ENV
          echo "RELEASE_VERSION=$(echo ${GITHUB_REF_NAME} | cut -f1 -d-)" >> $GITHUB_ENV
      - name: Retrieve built artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-linux-amd64
          path: dist
      - run: |
          ls -lh dist/
          (cd dist; sha256sum * > sha256sum.txt)
          cat dist/sha256sum.txt
      - name: Create or update Release
        run: |
            echo "Creating new release ${{ env.RELEASE_VERSION }} pointing to tag ${GITHUB_REF_NAME}"
            gh release create ${GITHUB_REF_NAME} \
              --title ${{ env.RELEASE_VERSION }} \
              --draft \
              --generate-notes \
              --prerelease
            echo "Uploading artifacts for tag ${GITHUB_REF_NAME}"
            gh release upload ${GITHUB_REF_NAME} dist/* --clobber
